import os
from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import (
    Application,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters
)
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
IMAGE_PATH = "zamzam.png"

# –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å —Ñ–æ—Ç–æ
MESSAGE_TEXT = """üåà –°–≤–æ–±–æ–¥–∞ –±—ã—Ç—å —Å–æ–±–æ–π.
–í –º–∏—Ä–µ, –≥–¥–µ –∫–∞–∂–¥—ã–π –¥–æ—Å—Ç–æ–∏–Ω –ø—Ä–∏–Ω—è—Ç–∏—è –∏ –ª—é–±–≤–∏, —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —ç—Ç–æ —Å–∏–ª–∞. –Ø—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞, –æ—Ç–∫—Ä—ã—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ —Å–º–µ–ª–æ—Å—Ç—å –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º ‚Äî –≤—Å—ë —ç—Ç–æ –æ –Ω—ë–º. –û–Ω –Ω–µ –±–æ–∏—Ç—Å—è –≤—ã–¥–µ–ª–∞—Ç—å—Å—è, –Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ –≥–æ—Ä–¥–∏—Ç—Å—è —Ç–µ–º, –∫—Ç–æ –æ–Ω –µ—Å—Ç—å.
#Pride #LoveIsLove #LGBTQ #–ë—É–¥—å–°–æ–±–æ–π

–ö–æ–Ω—Ç–∞–∫—Ç—ã:
+996(557) 35-88-75
@samat"""

# FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI()

# Telegram Application
application = Application.builder().token(BOT_TOKEN).build()

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Directly call handle_hello to send the photo and message
    await handle_hello(update, context)

async def handle_hello(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        with open(IMAGE_PATH, 'rb') as photo_file:
            await update.message.reply_photo(photo=photo_file, caption=MESSAGE_TEXT)
    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    if text == "–ø—Ä–∏–≤–µ—Ç":
        await handle_hello(update, context)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# –ó–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
@app.on_event("startup")
async def startup():
    await application.initialize()
    await application.start()

@app.on_event("shutdown")
async def shutdown():
    await application.stop()
    await application.shutdown()

# Webhook –¥–ª—è Telegram
@app.post("/webhook")
async def telegram_webhook(request: Request):
    data = await request.json()
    update = Update.de_json(data, application.bot)
    await application.process_update(update)
    return {"ok": True}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
@app.get("/")
def root():
    return {"status": "ok"}
